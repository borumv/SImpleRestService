import React, { useEffect, useState, useRef } from 'react';
import {useParams} from 'react-router-dom'
import Form, {
  SimpleItem,
  GroupItem,
  Label
} from 'devextreme-react/form';
import { confirm } from "devextreme/ui/dialog"
import { Button } from 'devextreme-react/button';
import 'devextreme-react/text-area';
import notify from 'devextreme/ui/notify';
import RestService from '../../services/tradeUnionService'
import 'devextreme-react/text-area';
import './styles.css'
import DxTablePageDeep from './../../components/tablePage/dxTablePage/dxTablePageDeep'
import dxTextBox from "devextreme/ui/text_box";
const restService = new RestService();

const PersonForm = () =>{
  
    const person = useParams()
    const [data, setData] = useState()
    const [rest,] = useState(restService)
     const [,setEducation] = useState()
    const [userId, setUserId] = useState(3)
    const [refresh,] = useState(false)
    const [hasError , setHasError] = useState(false)
    const [error, setError] = useState({hasError: false,
      errors:{}})

    function refreshForm(){
      setUserId(person.id)
       rest.byKey('/persons', person.id)
            .then(item =>{
              setData(item)
              console.log('Person', item)
              setEducation(item.education)
            })
    }
    
    useEffect(()=>{
      refreshForm()
    }, [])

    const birthDateOptions = {
        width: '100%'
    }
  
    const avatarRender = () =>{
        return (
          <div className="form-avatar"></div>
        );
      }
    const phoneOptions = {
        mask: '+375 (00) 000-00-00'
    }
    const onFieldDataChange = (e) =>{
       console.log('onFieldDataChange',  e)    
    }
    //Logic of control validation datafields
    const setInvalidView = (datafield, message) =>{
      const datafieldNameElement = document.getElementsByName(datafield)[0]
      console.log("datafielSimple - ", datafield)
      console.log("dataFieldNotSimple - " , datafieldNameElement)
      const textBoxElement = dxTextBox.getInstance(datafieldNameElement.closest('.dx-textbox'))
      if(textBoxElement){
        textBoxElement.option({
            validationMessageMode: "always",
            isValid: false,
            validationStatus: "invalid",
            height:'100%',
            shading: true,
            shadingColor: 'black',
            validationErrors: [{ message: `${message}` }]
        });
        textBoxElement.on("change", function(e){
            textBoxElement.option({
                validationStatus: "valid",
            });
        });
      }
    }

   const onClicked = (e) =>{
      setHasError(false)
      let result = confirm("Точно хотите изменить информацию?", "Confirm");
      e.event.preventDefault();
      result.then(()=>{
        if(result){
          rest.update('/persons', data.id, data)
         .then(e => notify('данные сохранены'))
         .catch(() => setHasError(true))
        }
      })

    }
    //triggered, when we have had error
    useEffect(() =>{
      console.log('Has error', hasError)
      if(hasError){
        notify('error', "error")
        const errorList = rest.getError()
        setError({hasError: true, errors: errorList})       
      }else{
        setError({hasError: false, errors: {}})
      }},[hasError, setHasError])

    useEffect(()=>{
      if(error.hasError){
        error.errors.map(item =>setInvalidView(item.path, item.message))}     
    },[error])

    return(
        <>
        <Form formData={data}
          labelMode ='static'
          id='personForm'
          showValidationSummary={true}
          onFieldDataChanged={onFieldDataChange}
          onContentReady = {onFieldDataChange}
         // onInitialized = {onFormInitialized}
          >
       <GroupItem cssClass="first-group" colCount={4}>
            <SimpleItem render={avatarRender} >
            </SimpleItem>
            <GroupItem colSpan={3}>
              <SimpleItem dataField="firstName"  width = '100%' editorType='dxTextBox' id= "ddasd2">
              </SimpleItem>
              <SimpleItem dataField="lastName" editorType='dxTextBox' id= "213123"/>
              <SimpleItem
                dataField="birth"
                editorType="dxDateBox"
                editorOptions={birthDateOptions}
              />
          </GroupItem>
        </GroupItem>
        <GroupItem cssClass="second-group" colCount={2} >
            <GroupItem>
                <SimpleItem dataField="address" id= "123444"/>
                <SimpleItem dataField="livePlace"  />
                <SimpleItem dataField="regPlace" />
                <SimpleItem dataField="nationality" />
            </GroupItem>
            <GroupItem>
                <SimpleItem
                      dataField="phoneNumber"
                      editorOptions={phoneOptions}>
                      <Label text="Phone" />
                </SimpleItem>
                <SimpleItem dataField = "education"/>
            </GroupItem>
            <SimpleItem dataField="comment"  colSpan = {2} editorType="dxTextArea" height = '140' >
                <Label alignment="center" />
            </SimpleItem>
              <SimpleItem colSpan = {2}>
                <Button 
                        onClick ={onClicked}
                        stylingMode="contained"
                        type="default"
                        width={120}
                        icon="floppy"                      
                        />
              </SimpleItem>  
              <SimpleItem colSpan = {1}>
                <h1 alignment = "center">Payments</h1>
              </SimpleItem>
              <SimpleItem colSpan={2}/>
              <SimpleItem colSpan = {2}>
                  <DxTablePageDeep table={`/persons/${userId}/doc_payment`} id='3' path='docpayments' crudpath='/docpayments' refresh = {refresh}/>
              </SimpleItem>
          </GroupItem>       
      </Form>
      </>
    );
  }


    

export default PersonForm;