import React from 'react';
import {
    DataGrid,
    Column,
    Grouping,
    GroupPanel,
    LoadPanel,
    Editing,
    Pager,
    Paging,
    SearchPanel,
    Button,
    Selection,
    Scrolling,
    Toolbar,
    Export
    
} from 'devextreme-react/data-grid';
import { Workbook } from 'exceljs';
import { exportDataGrid } from 'devextreme/excel_exporter';
import { saveAs } from 'file-saver';
import { confirm } from 'devextreme/ui/dialog';


import Paper from '@material-ui/core/Paper';

import CustomStore from 'devextreme/data/custom_store';

import RestService from '../../../services/tradeUnionService'
import {routes} from '../../../pages/routes'
import { Redirect} from 'react-router';
import { useState } from 'react';
import useLocalStorage from '../../../hooks/useLocalStorage'

const DxTablePageDeep = (path, refresh) =>{

    console.log("ТАБЛЕPA", path)
    const dataGrid = React.createRef();
    const [example, setExample] = useState(true)
    const editTable = routes.filter(item =>{
        return item.table == path.path
    })[0]
    const isPayment = path.path === "docpayments" ? true : false;
    console.log('EDITTRABLE', editTable)
    const tableProps = {allowAdding: path.adding}
    const [userLogin, setUserLogin] = useLocalStorage('loginUser')
    const rest = new RestService(); 
  
    const dataSource =  new CustomStore({
        key: "id",
        load: () => rest.deepByKey(path.table),
        insert: (value) => rest.insert(path.table, value),
        remove: (key) => rest.delete(path.crudpath, key),
        update: (key, values) => rest.update(path, key, values),
        
    })

    console.log("TableProps = ", tableProps.allowAdding)

    function onClick(e){
        console.log('CLicks')
    }
    const onRowValidate = (e) =>{
        console.log('On Row Validate', e)
        console.log('Datasource',dataSource)
    }

    const payAction = (e) =>{
        console.log("payAction - ",  e.row)
        
        e.event.preventDefault();
        let result = confirm("Оплата точно прошла?", "Confirm");
            result.then((dialogResult) =>{
                if(result){
                rest.updatePayments("/docpayments", e.row.data.id)
                .then(() =>{
                    onRefresh()
                })
            }})

    }

    const isVisible = (e) =>{
        return e.row.data.endPay === null;
    }

    const onRefresh = () =>{
        console.log("DATAGRID - ", dataGrid )
        setExample(!example)
       // dataGrid.current.instance.refresh(true)
    }

    function onExporting(e) {
        const workbook = new Workbook();
        const worksheet = workbook.addWorksheet('Main sheet');
        exportDataGrid({
          component: e.component,
          worksheet,
          autoFilterEnabled: true,
        }).then(() => {
          workbook.xlsx.writeBuffer().then((buffer) => {
            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');
          });
        });
        e.cancel = true;
      }

   return(
        <>
            
        <div className = "tables" >   
         <Paper>
            <DataGrid
                    dataSource={dataSource}
                    allowColumnReordering={true}
                    rowAlternationEnabled={true}
                    showBorders={true}
                    repaintChangesOnly={true} 
                    focusedRowEnabled={true}
                    defaultFocusedRowIndex={0}
                    onRowDblClick={onClick}
                    showBorders={example}
                    onRowValidating= {onRowValidate} 
                    onExporting ={onExporting}                           
                >
                        <Editing
                            // refreshMode={refresh}
                            // mode="cell"
                            allowAdding={tableProps.allowAdding}
                            allowDeleting={true}
                            allowUpdating={true}/>
                        <Selection mode="single" />
                        <Scrolling mode="standard" />
                        <LoadPanel enabled />
                        <Paging enabled defaultPageSize={3} />
                        <Pager showPageSizeSelector={true} />       
                        <GroupPanel visible={true} />
                        <SearchPanel visible={true} highlightCaseSensitive={true} />

                        <LoadPanel enabled />
                        <Grouping autoExpandAll={false} />
                        
                        
                        {editTable.columns.filter(item => item.roleWhoNotSee.includes(JSON.parse(userLogin).role)===false).map( item =>{
                                    return <Column key={item.dataField} {...item} {...item.tableProps} >

                                        </Column>
                         })}

                        <Column dataField = "DDd" caption ="PAY" alignment="Left" type="buttons" width={110} visible={isPayment}>
                            <Button name="Заплатил" icon="airplane" visible={isVisible} onClick={payAction}/>
                        </Column>
                        <Export enabled={true} allowExportSelectedData={true} />
            </DataGrid>
            </Paper>
        </div>
        </>
    )
}

export default DxTablePageDeep;